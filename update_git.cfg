[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    
    ; Verifica esistenza directory
    {% set dir_exists = printer.gcode.action_emergency_stop is none %}
    {% if not dir_exists %}
        {action_respond_info("ERRORE: Directory klipper-backup non trovata!")}
        {action_raise_error("Directory backup non trovata")}
    {% else %}
        ; Verifica esistenza script
        {% set script_check = printer.gcode.shell_command("test -f ~/klipper-backup/script.sh && echo OK || echo MISSING") %}
        {% if "MISSING" in script_check %}
            {action_respond_info("ERRORE: script.sh non trovato!")}
            {action_raise_error("Script backup non trovato")}
        {% else %}
            ; Esegui backup con/senza messaggio
            {% if message %}
                RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
            {% else %}
                RUN_SHELL_COMMAND CMD=update_git_script
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "
    if ! cd ~/klipper-backup; then
        echo 'ERRORE: Impossibile accedere alla directory';
        exit 1;
    fi;
    if ! git fsck --no-progress; then
        echo 'ERRORE: Repository Git corrotto!';
        exit 1;
    fi;
    bash script.sh"
timeout: 180.0  # Aumentato timeout
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "
    if ! cd ~/klipper-backup; then
        echo 'ERRORE: Impossibile accedere alla directory';
        exit 1;
    fi;
    if ! git fsck --no-progress; then
        echo 'ERRORE: Repository Git corrotto!';
        exit 1;
    fi;
    bash script.sh \"$0\""
timeout: 180.0  # Aumentato timeout
verbose: True